<summary fileFormatVersion="101" isInterface="true">
	<hierarchy>
		<interface name="java.util.Queue" />
		<interface name="java.util.Collection" />
		<interface name="java.lang.Iterable" />
	</hierarchy>
	<methods>
		<method id="boolean add(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
				</flow>
			</flows>
		</method>
		<method id="void addFirst(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
				</flow>
			</flows>
		</method>
		<method id="void addLast(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
				</flow>
			</flows>
		</method>
		<method id="java.util.Iterator descendingIterator()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" />
					<to sourceSinkType="Return" AccessPath="[java.util.Iterator: java.lang.Object innerCollection]" AccessPathTypes="[java.lang.Object]" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object remove()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object removeFirst()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object removeLast()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object getFirst()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object getLast()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="boolean offer(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
				</flow>
			</flows>
		</method>
		<method id="void push(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
				</flow>
			</flows>
		</method>
		<method id="boolean offerFirst(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
				</flow>
			</flows>
		</method>
		<method id="boolean offerLast(java.lang.Object)">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Parameter" ParameterIndex="0" />
					<to sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object peek()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object pop()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object element()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object peekFirst()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object peekLast()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object poll()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object pollFirst()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
		<method id="java.lang.Object pollLast()">
			<flows>
				<flow isAlias="false" typeChecking="false">
					<from sourceSinkType="Field" AccessPath="[java.util.Collection: java.lang.Object[] innerArray]" AccessPathTypes="[java.lang.Object[]]" />
					<to sourceSinkType="Return" />
				</flow>
			</flows>
		</method>
	</methods>
</summary>