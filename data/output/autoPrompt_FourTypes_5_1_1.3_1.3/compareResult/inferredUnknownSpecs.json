{
    "inferredUnknownSpecs": [
        [
            "java.security.KeyStore",
            "java.security.KeyStore",
            "KeyStore getInstance(String type, Provider provider)",
            "String getType()",
            1.0,
            1,
            "[]-->(1, 0)"
        ],
        [
            "java.security.KeyStore",
            "java.security.KeyStore",
            "KeyStore getInstance(String type, Provider provider)",
            "Provider getProvider()",
            1.0,
            1,
            "[]-->(2, 0)"
        ],
        [
            "java.util.LinkedHashMap",
            "java.util.LinkedHashMap",
            "V getOrDefault(Object key, V defaultValue)",
            "V get(Object key)",
            2.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ],
        [
            "java.util.AbstractMap",
            "java.util.AbstractMap",
            "V replace(K key, V value)",
            "V computeIfPresent(K key, BiFunction remappingFunction)",
            2.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ],
        [
            "java.util.LinkedHashMap",
            "java.util.LinkedHashMap",
            "V getOrDefault(Object key, V defaultValue)",
            "V computeIfPresent(K key, BiFunction remappingFunction)",
            2.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ],
        [
            "java.sql.CallableStatement",
            "java.sql.CallableStatement",
            "void setObject(int parameterIndex, Object x, SQLType targetSqlType, int scaleOrLength)",
            "Object getObject(String parameterName, Map map)",
            0.0,
            1,
            "[(2, 2)]-->(3, 0)"
        ],
        [
            "java.util.LinkedHashMap",
            "java.util.LinkedHashMap",
            "V getOrDefault(Object key, V defaultValue)",
            "V computeIfAbsent(K key, Function mappingFunction)",
            2.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ],
        [
            "java.util.LinkedHashMap",
            "java.util.LinkedHashMap",
            "V getOrDefault(Object key, V defaultValue)",
            "Set keySet()",
            1.0,
            1,
            "[]-->(1, 0)"
        ],
        [
            "java.sql.CallableStatement",
            "java.sql.CallableStatement",
            "void setObject(String parameterName, Object x, SQLType targetSqlType, int scaleOrLength)",
            "Object getObject(String parameterName, Map map)",
            1.0,
            1,
            "[(1, 1)]-->(3, 0)"
        ],
        [
            "java.util.LinkedHashMap",
            "java.util.LinkedHashMap",
            "V getOrDefault(Object key, V defaultValue)",
            "V compute(K key, BiFunction remappingFunction)",
            2.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ],
        [
            "java.util.AbstractMap",
            "java.util.AbstractMap",
            "V replace(K key, V value)",
            "V get(Object key)",
            2.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ],
        [
            "java.util.LinkedHashMap",
            "java.util.LinkedHashMap",
            "V getOrDefault(Object key, V defaultValue)",
            "V merge(K key, V value, BiFunction remappingFunction)",
            2.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ],
        [
            "java.util.AbstractMap",
            "java.util.AbstractMap",
            "V replace(K key, V value)",
            "V compute(K key, BiFunction remappingFunction)",
            2.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ],
        [
            "java.util.LinkedHashMap",
            "java.util.LinkedHashMap",
            "V getOrDefault(Object key, V defaultValue)",
            "V replace(K key, V value)",
            2.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ],
        [
            "java.util.AbstractMap",
            "java.util.AbstractMap",
            "V replace(K key, V value)",
            "V computeIfAbsent(K key, Function mappingFunction)",
            2.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ],
        [
            "java.sql.CallableStatement",
            "java.sql.CallableStatement",
            "T getObject(int parameterIndex, Class type)",
            "Object getObject(int parameterIndex)",
            1.0,
            1,
            "[(1, 1)]-->(2, 0)"
        ]
    ]
}